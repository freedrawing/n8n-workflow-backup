{
  "active": true,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "동기화 시작 메시지",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Create sub path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "동기화 완료 알림",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "동기화 시작 메시지",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create sub path": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Flows 실패",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config": {
      "main": [
        [
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "동기화 시작 메시지": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Flows 실패": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-17T07:28:51.216Z",
  "id": "WFN5Sb7LlMay0RkM",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "n8n 워크플로우 깃허브에 백업",
  "nodes": [
    {
      "parameters": {},
      "id": "ddbc23a3-af91-451f-a7ce-5f5899ed0916",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        304,
        -64
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 731.7039821513649,
        "width": 1910.7813046051347,
        "color": 6
      },
      "id": "3ee74d14-e5f8-4d33-887e-cd5d9581af82",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -176,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "9649dddd-01ed-43d9-86c3-8194d33c1cfa",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -128,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "6f8db42a-5828-495e-86e5-7619fe0522ce",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        704,
        64
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "wXz57zFNqs89eC1A",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "cc2af571-a4e0-4f2c-b65c-e2ac5b24f935",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        1568,
        544
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "4aa7e2ce-98b3-427d-9e30-c2f28ebc2397",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        528,
        432
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2059e391-b9aa-4183-8418-b7bdc0e77192",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        288,
        432
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "773d24a1-85ca-4db3-8a69-ff35abb7fe42",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        288,
        704
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "id": "3f3486be-fdcd-44a4-95c4-b1a7f9dbf65b",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        464,
        704
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "9af22b4e-4260-450d-83af-8878e5ddba5b",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        864,
        704
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "7e1f4314-46dd-4c9c-a643-81b4ddeb3390",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1104,
        544
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "81116c83-6cde-4359-bbfc-266e26b9949e",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1104,
        704
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "cf5fed0f-6e3c-43e9-81d7-db078b1e89d1",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1104,
        912
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{$json.subPath.replace(/^\\/*/, '')}}{{$('Execute Workflow Trigger').first().json.id || 'backup'}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{ $('Execute Workflow Trigger').first().json.name || 'workflow-backup' }} ({{ $json.github_status }})"
      },
      "id": "07291ffe-53ed-4565-bd1c-cc878fd5940d",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        1328,
        912
      ],
      "typeVersion": 1,
      "webhookId": "1a1b9c65-d421-41b1-b6ab-1bdd91af4a39",
      "credentials": {
        "githubApi": {
          "id": "5ppdnFPYIaodCchO",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "fea43b30-26ca-432e-ac2a-9410eb915a8b",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        928,
        64
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 15 15 * * *"
            }
          ]
        }
      },
      "id": "5b6e9d30-fc7e-413f-96f6-afd8045c4d05",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        304,
        160
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dae43d3b-56e5-4098-b602-862ebf5cd073",
              "name": "subPath",
              "type": "string",
              "value": "={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "7368dad7-1ad6-481d-9a03-ad2f9be89511",
      "name": "Create sub path",
      "type": "n8n-nodes-base.set",
      "position": [
        688,
        704
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "content": "## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.",
        "height": 417,
        "width": 385,
        "color": 4
      },
      "id": "c37c5fc2-46e9-4be8-bfd5-aa4a4a4eb034",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -160,
        -128
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 416.1856906618075,
        "width": 1272.6408145680155,
        "color": 7
      },
      "id": "67b51278-509b-47fc-a526-72f181ee6b84",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        288,
        -112
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "workflowId": "={{ $workflow.id }}",
        "mode": "each",
        "options": {}
      },
      "id": "d3211ae7-fa5a-470f-8f9c-65c817162dfa",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        1152,
        80
      ],
      "typeVersion": 1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ \n  $('Execute Workflow Trigger').first().json.createdAt.split('-')[0]\n}}/{{ \n  $('Execute Workflow Trigger').first().json.createdAt.split('-')[1]\n}}/{{ \n  $('Execute Workflow Trigger').first().json.id\n}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "1d1057df-91f7-4220-85f4-5a6f9f60f06c",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        64,
        432
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "05e54ada-a9a5-4597-9d4e-f2e426427ac5",
      "credentials": {
        "githubApi": {
          "id": "5ppdnFPYIaodCchO",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f6d1741-772f-462a-811f-4c334185e4f0",
              "name": "repo_owner",
              "type": "string",
              "value": "={{ $vars.repo_owner || 'freedrawing' }}"
            },
            {
              "id": "8cac215c-4fd7-422f-9fd2-6b2d1e5e0383",
              "name": "repo_name",
              "type": "string",
              "value": "={{ $vars.repo_name || 'n8n-workflow-backup'}}"
            },
            {
              "id": "eee305e9-4164-462a-86bd-80f0d58a31ae",
              "name": "repo_path",
              "type": "string",
              "value": "={{ $vars.repo_path || 'https://github.com/freedrawing/n8n-workflow-backup.git'}}"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "7d6cfc0e-f44e-451e-a0bf-5cc130d5e57d",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        64,
        720
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "chatId": "5111438653",
        "text": "=🔄 워크플로우 동기화를 시작합니다! [{{ $execution.id }}]",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        528,
        64
      ],
      "id": "d2fe6e89-cadd-4cee-82bd-a111e0293217",
      "name": "동기화 시작 메시지",
      "webhookId": "99af6d42-48fd-4438-88dd-9797e7a3c0b2",
      "credentials": {
        "telegramApi": {
          "id": "ejLmvh6eni9woYLp",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "5111438653",
        "text": "=✅ 동기화 완료 - {{ $('n8n').all().length }} 워크플로우 처리됨.",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1152,
        -64
      ],
      "id": "b4642ec7-b238-4ae0-b8ab-07b9628e4cb5",
      "name": "동기화 완료 알림",
      "webhookId": "99af6d42-48fd-4438-88dd-9797e7a3c0b2",
      "credentials": {
        "telegramApi": {
          "id": "ejLmvh6eni9woYLp",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "5111438653",
        "text": "=:x: Failed to backup {{ $('Loop Over Items').item.json.id }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1392,
        96
      ],
      "id": "e669329a-dc0e-40b7-b270-47b7cc0adeed",
      "name": "Flows 실패",
      "webhookId": "99af6d42-48fd-4438-88dd-9797e7a3c0b2",
      "credentials": {
        "telegramApi": {
          "id": "ejLmvh6eni9woYLp",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{$json.subPath.replace(/^\\/*/, '')}}{{$('Execute Workflow Trigger').first().json.id || 'backup'}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{ $('Execute Workflow Trigger').first().json.name || 'workflow-backup' }} ({{ $json.github_status }})"
      },
      "id": "33a4d436-e317-4711-b98f-234669fb01f4",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        1328,
        704
      ],
      "typeVersion": 1,
      "webhookId": "80d20816-deb4-4824-8152-93a29f709fc5",
      "credentials": {
        "githubApi": {
          "id": "5ppdnFPYIaodCchO",
          "name": "GitHub account"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "n8n-workflow-backup",
  "repo_owner": "freedrawing",
  "repo_path": "https://github.com/freedrawing/n8n-workflow-backup.git",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-08-02T06:42:20.930Z",
  "versionId": "cb5dfa1a-704d-4135-862b-2cd9b86d592a"
}